(() => {
	const e = (e) => e.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;'),
		t = (e) => `${new Intl.DateTimeFormat('en-US', { month: 'long' }).format(e)} ${e.getDate()}, ${e.getFullYear()}`;
	Object.defineProperty(String.prototype, 'capitalize', {
		value: function () {
			return this.charAt(0).toUpperCase() + this.slice(1);
		},
		enumerable: !1
	});
	const n = () => {
			let e = Chart.getChart('dailyActiveUsers');
			null != e && e.destroy(),
				fetch('api/admin/get-analytics', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })
					.then((e) => e.json())
					.then((e) => {
						console.log(e);
						const { dailyActiveUsers: t } = e;
						let n = parseInt(document.querySelector('#timeframeSelector').value),
							o = K;
						isNaN(n)
							? ((document.querySelector('#viewTextLbl').innerHTML = 'Enter a number'),
							  (document.querySelector('#viewTextLbl').style.color = '#f75252'),
							  (document.querySelector('#timeframeSelector').style.border = 'solid 1px #f75252'))
							: (a(t, n, o),
							  (document.querySelector('#viewTextLbl').innerHTML = 'View the past'),
							  (document.querySelector('#viewTextLbl').style.color = '#333'),
							  (document.querySelector('#timeframeSelector').style.border = 'solid 1px #ccc'));
					});
		},
		o = (e, t, n, o) => {
			try {
				return null == e[`${t}`][`${n}`][`${o}`] ? 0 : e[`${t}`][`${n}`][`${o}`];
			} catch (e) {
				return 0;
			}
		};
	function l(e, t) {
		return new Date(t, e, 0).getDate();
	}
	const r = (e) => {
			let t = [],
				n = [],
				r = new Date(),
				a = r.getFullYear(),
				s = r.getMonth() + 1,
				i = r.getDate();
			for (; n.length <= 8; ) {
				for (; i > 0; ) if ((t.unshift(`${s}/${i}`), n.unshift(o(e, a, s, i)), i--, n.length >= 8)) return { labels: t, data: n };
				for (s--; s > 0; ) {
					for (i = l(s, a); i > 0; ) if ((t.unshift(`${s}/${i}`), n.unshift(o(e, a, s, i)), i--, n.length >= 8)) return { labels: t, data: n };
					s--;
				}
				for (a--; a > 0; ) {
					for (s = 12; s > 0; ) {
						for (i = l(s, a); i > 0; ) if ((t.unshift(`${s}/${i}`), n.unshift(o(e, a, s, i)), i--, n.length >= 8)) return { labels: t, data: n };
						s--;
					}
					a--;
				}
			}
			return { labels: t, data: n };
		},
		a = (e, t, n) => {
			let r = document.getElementById('dailyActiveUsers').getContext('2d');
			const { labels: a, data: s } = ((e, t, n) => {
				let r = [],
					a = [];
				for (; a.length <= t; )
					switch (n) {
						case 'days': {
							let n = new Date(),
								s = n.getFullYear(),
								i = n.getMonth() + 1,
								d = n.getDate();
							for (; d > 0; ) if ((r.unshift(`${i}/${d}`), a.unshift(o(e, s, i, d)), d--, a.length >= t)) return { labels: r, data: a };
							for (i--; i > 0; ) {
								for (d = l(i, s); d > 0; ) if ((r.unshift(`${i}/${d}`), a.unshift(o(e, s, i, d)), d--, a.length >= t)) return { labels: r, data: a };
								i--;
							}
							for (s--; s > 0; ) {
								for (i = 12; i > 0; ) {
									for (d = l(i, s); d > 0; ) if ((r.unshift(`${i}/${d}`), a.unshift(o(e, s, i, d)), d--, a.length >= t)) return { labels: r, data: a };
									i--;
								}
								s--;
							}
						}
						case 'months': {
							let n = new Date(),
								s = n.getFullYear(),
								i = n.getMonth() + 1;
							for (; i > 0; ) {
								let n = new Date(s, i, 0).toLocaleString('default', { month: 'long' }),
									d = l(i, s),
									c = 0;
								for (let t = 1; t <= d; t++) c += o(e, s, i, t);
								if ((r.unshift(n), a.unshift(c), i--, a.length >= t)) return { labels: r, data: a };
							}
							for (s--; s > 0; ) {
								for (i = 12; i > 0; ) {
									let n = new Date(s, i, 0).toLocaleString('default', { month: 'long' }),
										d = l(i, s),
										c = 0;
									for (let t = 1; t <= d; t++) c += o(e, s, i, t);
									if ((r.unshift(n), a.unshift(c), i--, a.length >= t)) return { labels: r, data: a };
								}
								s--;
							}
						}
						case 'years': {
							let n = new Date().getFullYear();
							for (; n > 0; ) {
								let s = 0,
									i = 12;
								for (; i > 0; ) {
									let t = l(i, n);
									for (let l = 1; l <= t; l++) s += o(e, n, i, l);
									i--;
								}
								if ((r.unshift(n), a.unshift(s), a.length >= t)) return { labels: r, data: a };
								n--;
							}
						}
					}
			})(e, t, n);
			console.log(a, s), (Chart.defaults.font.family = 'Montserrat');
			new Chart(r, {
				type: 'bar',
				data: {
					labels: a,
					datasets: [{ label: 'DAUs', data: s, fill: !1, borderRadius: 20, borderSkipped: !1, borderColor: '#2782f2', backgroundColor: '#2782f2', datalabels: { display: !1 } }]
				},
				options: { barThickness: 30, plugins: { legend: { display: !1 } }, scales: { x: { grid: { display: !1 }, categoryPercentage: 1, barPercentage: 1 }, y: { beginAtZero: !0 } } }
			});
		},
		s = (e, t) => {
			document.querySelector('#totalUsersNum').innerHTML = e;
			const { labels: n, data: o } = r(t);
			let l = i(o, 'totalUsers'),
				a = document.getElementById('totalUsers').getContext('2d');
			(a.canvas.parentNode.style.width = '100%'),
				window.innerWidth <= 1060 ? (a.canvas.parentNode.style.height = '100%') : (a.canvas.parentNode.style.height = '70%'),
				new Chart(a, {
					type: 'line',
					data: { labels: n, datasets: [{ label: 'Users', data: o, borderColor: l, backgroundColor: l, fill: !1, tension: 0.5 }] },
					options: { scales: { y: { display: !1, stacked: !1 }, x: { beginAtZero: !0, display: !1 } }, plugins: { legend: { display: !1 } }, elements: { point: { radius: 1 } } }
				}).update();
		},
		i = (e, t) => {
			let n = e[0],
				o = e[e.length - 1];
			console.log('First / Last: ', n, o);
			let l = o / n;
			console.log('Ratio:', l);
			let r = Math.round(100 * l);
			console.log('Total:', r);
			let a = r - 100;
			console.log('Percent:', a);
			let s = '#f75252',
				i = '';
			return a >= 0 && ((i = '+'), (s = '#3dd598')), (document.querySelector(`#${t}Preview`).innerHTML = `<b style="color: ${s};">${i}${a}%</b> this week`), s;
		},
		d = (e, t) => {
			document.querySelector('#totalPostsNum').innerHTML = e;
			const { labels: n, data: o } = r(t);
			let l = i(o, 'totalPosts'),
				a = document.getElementById('totalPosts').getContext('2d');
			(a.canvas.parentNode.style.height = '70%'),
				(a.canvas.parentNode.style.width = '100%'),
				new Chart(a, {
					type: 'line',
					data: { labels: n, datasets: [{ label: 'Posts', data: o, borderColor: l, backgroundColor: l, fill: !1, tension: 0.5 }] },
					options: { scales: { y: { display: !1, stacked: !1 }, x: { beginAtZero: !0, display: !1 } }, plugins: { legend: { display: !1 } }, elements: { point: { radius: 1 } } }
				}).update();
		},
		c = (e, t) => {
			let n = document.getElementById('databasePercent').getContext('2d');
			(n.canvas.parentNode.style.height = '100%'), (n.canvas.parentNode.style.width = '40%');
			let o = e / t;
			(document.querySelector('#usedStorage').innerHTML = `${(100 * o).toFixed(1)}% Used`),
				(document.querySelector('#unusedStorage').innerHTML = `${(100 * (1 - o)).toFixed(1)}% Available`),
				new Chart(n, {
					type: 'doughnut',
					data: {
						labels: ['Used', 'Available'],
						datasets: [
							{ label: 'Database Storage', data: [o, 1 - o], backgroundColor: ['rgb(39, 130, 242)', 'rgb(242, 242, 242)'], hoverOffset: 4, borderColor: 'transparent', borderWidth: 0 }
						]
					},
					options: { hover: { mode: null }, plugins: { legend: { display: !1 } } }
				}).update();
		},
		p = () => {
			let e = document.getElementById('pageVisits').getContext('2d');
			(e.canvas.parentNode.style.height = '70%'),
				(e.canvas.parentNode.style.width = '100%'),
				new Chart(e, {
					type: 'bar',
					data: {
						labels: ['Home', 'Forums', 'Devotions', 'Bible Plans', 'Cowboy Stories'],
						datasets: [
							{
								label: 'Page Visits',
								data: [95, 65, 40, 75, 55],
								borderColor: 'rgb(39, 130, 242)',
								backgroundColor: 'rgb(39, 130, 242)',
								fill: !1,
								tension: 0.5,
								borderRadius: 50,
								borderSkipped: !1
							}
						]
					},
					options: { scales: { y: { display: !1, stacked: !1 }, x: { beginAtZero: !0, display: !1 } }, plugins: { legend: { display: !1 } }, elements: { point: { radius: 1 } } }
				}).update();
		};
	fetch('api/admin/isAdmin', { method: 'get', headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })
		.then((e) => e.json())
		.then((e) => {
			console.log(e), e.status ? h() : location.replace('/');
		});
	const u = () => {
			document.querySelectorAll('.settingSection').forEach((e) => {
				e.style.display = 'none';
			});
		},
		m = (e) => {
			u();
			let t = document.querySelector(`#${e}`);
			t ? ((t.style.display = 'flex'), E(e)) : (document.querySelector('#members').style.display = 'flex');
		},
		h = () => {
			let e = (function () {
				let e = window.location.search.split('?')[1];
				return e ? e.split('&')[0].split('=')[1] : null;
			})();
			u(),
				m(e),
				((e) => {
					switch (e) {
						case 'members':
						default:
							x();
							break;
						case 'analytics':
							L();
							break;
						case 'reports':
							T();
							break;
						case 'devotions':
							D();
							break;
						case 'bibleplans':
							U();
					}
				})(e);
		};
	const y = () => {
			let e = event.target.closest('#memberElement'),
				t = e.querySelectorAll('#editableInfo > p'),
				n = e.querySelectorAll('#editableInfo > input');
			console.log(t, n),
				t.forEach((e) => (e.style.display = 'none')),
				n.forEach((e) => {
					(e.style.display = 'flex'), (e.placeholder = e.previousElementSibling.innerHTML);
				}),
				(e.querySelector('#editBtn').style.display = 'none'),
				(e.querySelector('#confirmEditBtn').style.display = ''),
				(e.querySelector('#cancelEditBtn').style.display = '');
		},
		f = () => {
			let e = event.target.closest('#memberElement').querySelector('#uid').innerHTML;
			window.open(`/profile?uid=${e}`, '_blank');
		},
		g = () => {
			let e = event.target;
			console.log(e);
			let t = e.closest('.tableRow').id,
				n = new FormData();
			n.append('uid', t),
				fetch('api/admin/update-user', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
					.then((e) => e.json())
					.then((t) => {
						console.log(t), t.status && e.closest('#memberElement').remove();
					});
		},
		b = () => {
			let e = event.target;
			console.log(e);
			let t = e.closest('.tableRow').id,
				n = new FormData();
			n.append('uid', t),
				fetch('api/admin/cancel-subscription', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
					.then((e) => e.json())
					.then((e) => {
						console.log(e), e.status ? alert('Success! Subscription has been canceled!') : alert('Failed! Subscription was not canceled.');
					});
		},
		v = (t) => {
			let { address: n, admin: o, city: l, customer: r, email: a, firstName: s, lastName: i, pfp: d, phoneNumber: c, state: p, uid: u, username: m, zip: h } = t,
				v = (S = ('' + c).replace(/\D/g, '').match(/^(1|)?(\d{3})(\d{3})(\d{4})$/)) ? [S[1] ? '+1 ' : '', '(', S[2], ') ', S[3], '-', S[4]].join('') : null;
			var S;
			let w = document.createElement('div');
			(w.id = 'memberElement'),
				(w.innerHTML = `\n\t\t<div class="tableRow" id="${u}">\n\t\t<div class="tableRowInfo" id="editableInfo">\n\t\t<button id="dropInformation" class="tableDropBtn"> <i class="fa-solid fa-chevron-right"></i></button>\n\t\t<p id="firstNameAdmin">${e(
					s
				)}</p><input class="updateUserInfoInput" type="text" id="updateFirstName" placeholder="Update first name..."></input>\n\t\t<p id="lastNameAdmin">${e(
					i
				)}</p><input class="updateUserInfoInput" type="text" id="updateLastName" placeholder="Update last name..."></input>\n\t\t<p id="emailAdmin">${e(
					a
				)}</p><input class="updateUserInfoInput" type="text" id="updateEmail" placeholder="Update email..."></input>\n\t\t<p id="phoneNumberAdmin">${e(
					v
				)}</p><input class="updateUserInfoInput" type="text" id="updatePhoneNumber" placeholder="Update phone number..."></input>\n\t\t<p id="stateAdmin">${e(
					p
				)}</p><input class="updateUserInfoInput" type="text" id="updateState" placeholder="Update state (abbreviated)..."></input>\n        <p id="cityAdmin">${e(
					l
				)}</p><input class="updateUserInfoInput" type="text" id="updateCity" placeholder="Update city..."></input>\n\t\t<p id="addressAdmin">${e(
					n
				)}</p><input class="updateUserInfoInput" type="text" id="updateAddress" placeholder="Update address..."></input>\n\t\t<p id="zipAdmin">${e(
					h
				)}</p><input class="updateUserInfoInput" type="text" id="updateZip" placeholder="Update zip..."></input>\n\t\t<p id="adminAdmin">${o}</p><input class="updateUserInfoInput" type="text" id="updateAdmin" placeholder="Update admin..."></input>\n\t\t</div>\n\t\t<div style="display: flex; flex-direction: row;">\n\t\t</div>\n\t\t<div style="flex-direction: row; align-items: start; flex-wrap: wrap;" class="tableRowInfo">\n\t\t<p class="userInfoTag" style="width: 100%;"><b>Full Name:</b> ${e(
					s
				)} ${e(i)}</p>\n\t\t<p class="userInfoTag" style="width: 100%;"><b>Username:</b> ${e(m)}</p>\n\t\t<p class="userInfoTag" style="width: 100%;"><b>Email:</b> ${e(
					a
				)}</p>\n\t\t<p class="userInfoTag" style="width: 100%;"><b>Phone Number:</b> ${e(v)}</p>\n\t\t<p class="userInfoTag" style="width: 100%;"><b>Address:</b> ${e(n)}, ${e(l)}, ${e(
					p
				)}, ${e(h)}</p>\n\t\t<p class="userInfoTag" style="width: 100%;"><b>UID:</b> <span id="uid">${e(
					u
				)}</span></p>\n\t\t</div>\n\t\t<div class="tableRowBtns">\n\t\t<button style="font-size: 17px;height: 40px;line-height: 10px;" id="editBtn" class="btnLink">Edit</button>\n\t\t<button style="font-size: 17px;height: 40px;line-height: 10px; display:none;" id="confirmEditBtn" class="btnLink">Confirm Edit</button>\n\t\t<button style="font-size: 17px;height: 40px;line-height: 10px; display:none;" id="cancelEditBtn" class="btnLink">Cancel Edit</button>\n\t\t<button style="font-size: 17px;height: 40px;line-height: 10px;" id="profileBtn" class="btnLink">View Profile</button>\n\t\t<button style="font-size: 17px;height: 40px;line-height: 10px;" id="cancelSubBtn" class="btnLink">Cancel Subscription</button>\n\t\t<button style="font-size: 17px;height: 40px;line-height: 10px;" id="deleteMemberBtn" class="btnLink deleteBtn">Delete</button>\n\t\t</div>\n\t\t</div>\n\t\t<div style="display:none;" id="dropdownBox">\n\t\t<a>Profile</a>\n\t\t</div>\n\t\t<span class="line"></span>\n\t`),
				w.querySelector('#editBtn').addEventListener('click', y),
				w.querySelector('#profileBtn').addEventListener('click', f),
				w.querySelector('#deleteMemberBtn').addEventListener('click', g),
				w.querySelector('#cancelSubBtn').addEventListener('click', b),
				w.querySelector('#confirmEditBtn').addEventListener('click', W),
				w.querySelector('#cancelEditBtn').addEventListener('click', J),
				document.querySelector('.membersTable').appendChild(w);
		},
		S = () => {
			document.querySelectorAll('#memberElement').forEach((e) => e.remove());
		};
	function w() {
		let e = document.querySelectorAll('#filterPopup input');
		console.log(e);
		let t = !1;
		e.forEach((e) => {
			'' != e.value && ((e.value = ''), (t = !0));
		}),
			t && x();
	}
	const q = async () => {
		let e = {},
			t = document.querySelector('#usernameInput').value,
			n = document.querySelector('#fnInput').value,
			o = document.querySelector('#lnInput').value,
			l = document.querySelector('#pnInput').value,
			r = document.querySelector('#stateInput').value,
			a = document.querySelector('#cityInput').value,
			s = document.querySelector('#addressInput').value,
			i = document.querySelector('#zipInput').value,
			d = document.querySelector('#adminInput').value;
		console.log(d),
			'' != t && (e['meta.username'] = { $regex: t, $options: 'i' }),
			'' != n && (e['meta.firstName'] = { $regex: n, $options: 'i' }),
			'' != o && (e['meta.lastName'] = { $regex: o, $options: 'i' }),
			'' != l && (e['meta.phoneNumber'] = { $regex: l }),
			'' != r && (e['meta.shipping.state'] = { $regex: r, $options: 'i' }),
			'' != a && (e['meta.shipping.city'] = { $regex: a, $options: 'i' }),
			'' != s && (e['meta.shipping.address'] = { $regex: s, $options: 'i' }),
			'' != i && (e['meta.shipping.zip'] = i),
			'' != d && (e.admin = /^true$/i.test(d)),
			console.log(e);
		let c = new FormData();
		return (
			c.append('filter', JSON.stringify(e)),
			new Promise((e, t) => {
				setTimeout(() => {
					fetch('api/admin/get-members', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(c) })
						.then((e) => e.json())
						.then((t) => {
							e(t.members);
						});
				}, 100);
			}).catch((e) => {
				reject(e);
			})
		);
	};
	async function k() {
		let e = await q();
		S(), e.forEach((e) => v(e));
	}
	async function x() {
		S(),
			m('members'),
			(await q()).forEach((e) => v(e)),
			document.querySelector('#applyFilterBtn').addEventListener('click', k),
			document.querySelector('#clearFilterBtn').addEventListener('click', w);
	}
	const E = (e) => {
		const t = window.location.origin + window.location.pathname + `?v=${e}`;
		history.pushState(null, '', t);
	};
	function L() {
		m('analytics'),
			fetch('api/admin/get-analytics', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })
				.then((e) => e.json())
				.then((e) => {
					console.log(e);
					const { totalUsers: t, totalPosts: n, dailyActiveUsers: o, usersCalendar: l, postsCalendar: r, usedStorage: i, totalStorage: u } = e;
					a(o, 10, 'days'), s(t, l), d(n, r), p(), c(i, u);
				});
	}
	function $() {
		console.log(event.target), 'forumPost' == event.target.className && window.open(`forum?id=${event.target.id}`, '_blank');
	}
	function C() {
		let e = event.target.closest('#report'),
			t = e.querySelector('div').id;
		e.remove(), j();
		let n = new FormData();
		n.append('reportID', t),
			fetch('api/admin/remove-report', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e);
				});
	}
	const B = () => {
			document.querySelectorAll('#report').forEach((e) => {
				e.remove();
			});
		},
		I = (n) => {
			const { message: o, reasons: l, postID: r, reportType: a, reporterID: s, _id: i, ignored: d } = n,
				c = new FormData();
			c.append('id', r),
				fetch('api/forum/loadPost', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(c) })
					.then((e) => e.json())
					.then((n) => {
						if ((console.log(n), n.status)) {
							const { post: s, pfp: c } = n;
							((n, o, l, r, a, s, i, d) => {
								let c = new Date(l.postDate),
									p = document.createElement('div'),
									u = l.uID || l.authorID,
									m = l.username || l.author,
									h = l.title || l.content,
									y = null != l.message ? l.message : '',
									f = i ? 'Unignore' : 'Ignore',
									g = '../images/default-pfp.jpeg';
								var b;
								r && (g = `/image/${r.name}`),
									(p.id = 'report'),
									(p.innerHTML = `\n\t\t<div id="${s}" style="border: solid 1px #333; padding: 10px; border-radius: 5px; margin-top: 20px;">\n\t\t<div id="post">\n        <div class="forumPost" href="/forum?id=${a}" id=${a}>\n        <div class="inlineForumUser">\n            <img class="forumPfp" src="${g}"></img>\n            <a class="forumUser" href="/profile?uid=${u}">${e(
										m
									)}</a>\n            <p id="forumDate" class="forumUser"><i class="fa-solid fa-circle"></i> ${t(
										c
									)}</p>\n        </div>\n            <div class="forumTitle">\n                <h3><a id="title" href="/forum?id=${l.id}">${e(
										h
									)}</a></h3>\n            </div>\n                            \n                            \n        <p style="white-space:pre;">${y}</p>\n        <div class="forumBtns">\n            <p id="likeCounter">${
										l.likesCount
									}</p>\n            <button id="likeBtn" class="iconBtn"><i class="fa-regular fa-heart"></i></button>\n            <p id="commentCounter">${
										l.commentsCount
									}</p>\n            <button id="commentIcon" class="iconBtn"><i class="fa-regular fa-comment"></i></button>\n            <button id="reportBtn" class="iconBtn"><i class="fa-regular fa-flag"></i></button>\n        </div>\n        </div>\n        <span class="line"></span>\n\t\t<p>Media type: ${d.capitalize()}</p>\n        <p>Report category: ${((b =
										o),
									b.replaceAll(',', ', ')).capitalize()}</p>\n        <p>Report message: ${e(
										n
									)}</p>\n        <div class="inlineButtons">\n        <button style="height: 50px;" id="deleteBtn" class="btnLink">Delete Post</button>\n        <button style="height: 50px;" id="ignoreBtn" class="btnLink">${f}</button>\n\t\t<button style="height: 50px;" id="removeBtn" class="btnLink">Remove Report</button>\n        </div>\n\t\t</div>\n\t\t</div>\n\t`),
									p.querySelector('.forumPost').addEventListener('click', $),
									p.querySelector('.forumPost').addEventListener('mouseover', () => {
										document.body.style.cursor = 'pointer';
									}),
									p.querySelector('.forumPost').addEventListener('mouseout', () => {
										document.body.style.cursor = 'default';
									}),
									p.querySelector('#deleteBtn').addEventListener('click', _),
									p.querySelector('#ignoreBtn').addEventListener('click', O),
									p.querySelector('#removeBtn').addEventListener('click', C),
									document.querySelector('#reportHolder').appendChild(p);
							})(o, l, s, c, r, i, d, a);
						} else console.log('error!');
					})
					.catch((e) => {
						console.log(e);
					});
		};
	async function T() {
		m('reports'), B();
		let e = new FormData();
		e.append('id', ''),
			fetch('api/admin/get-reports', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(e) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e),
						(document.querySelector('#loadedReportsTitle').innerHTML = `Loaded ${e.reports.length} ${e.type} Reports`),
						e.reports.forEach((e) => {
							I(e);
						});
				});
	}
	async function D() {
		m('devotions'),
			console.log('devotions'),
			document.querySelector('#createDevotionBtn').addEventListener('click', V),
			document.querySelector('#devotionPopupContents').addEventListener('click', (e) => {
				e.stopPropagation();
			}),
			document.querySelector('#devotionPopupOverlay').addEventListener('click', Y),
			document.querySelector('#closeDevotionMainBtn').addEventListener('click', Y),
			document.querySelector('#scheduleDevotionBtn').addEventListener('click', Z);
		let n = new Date(),
			o = new Date(n.getTime() - 6e4 * n.getTimezoneOffset()).toISOString().split('T')[0];
		(document.querySelector('#releaseDate').value = o),
			fetch('api/admin/get-devotions', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })
				.then((e) => e.json())
				.then((n) => {
					console.log(n),
						n.status &&
							n.devotions.forEach((n) => {
								!(function (n) {
									console.log(n);
									let { _id: o, title: l, message: r, username: a, uID: s, releaseDate: i, likesCount: d, commentsCount: c, profilePic: p } = n,
										u = new Date(i),
										m = (t(u), document.createElement('div'));
									(m.id = 'post'),
										(m.innerHTML = `\n\t\t<span class="line"></span>\n\t\t<div class="forumPost" id=${o}>\n\t\t\n\t\t\n\t\t<h2 class="forumDate">${t(
											u
										)}</h2>\n\t\t<h3><a class="forumTitle" id="title">${e(
											l
										)}</a></h3>\n\t\t\n\t\t<p style="white-space:pre;">${r}</p>\n\t\t<div class="forumBtns">\n\t\t\t<button id="deleteDevotionBtn" class="iconBtn"><i class="fa-regular fa-trash-can"></i></button>\n\t\t</div>\n\t\t</div>\n\t`),
										m.querySelector('#deleteDevotionBtn').addEventListener('click', z),
										document.querySelector('#devotionHolder').appendChild(m);
								})(n);
							});
				});
	}
	function P(e) {
		!(function (e) {
			let { _id: t, books: n, description: o, icon: l, title: r } = e,
				a = 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Christ_at_the_Cross_-_Cristo_en_la_Cruz.jpg/640px-Christ_at_the_Cross_-_Cristo_en_la_Cruz.jpg';
			l.name && (a = '/image/' + l.name);
			let { booksCount: s, chaptersCount: i } = (function (e) {
					let t = 0,
						n = 0;
					return (
						e.books.forEach((e) => {
							t++, (n += e.chapters.length);
						}),
						{ booksCount: t, chaptersCount: n }
					);
				})(e),
				d = document.createElement('div');
			(d.className = 'biblePlan'),
				(d.id = t),
				(d.style = 'width: 100%; color: black; border: 0px;'),
				(d.innerHTML = `\n                <div class="biblePlanImage">\n                    <img style="width: 100%; height: 100%; border-radius: 10px 0px 0px 10px; object-fit: cover; object-position: top;" src="${a}" alt="">\n                </div>\n                <div class="biblePlanInformation">\n                    <h3 class="biblePlanHeader">${r}</h3>\n                    <p class="biblePlanDescriptor">${o}</p>\n                    <p class="biblePlanDescriptor">${s} books, ${i} chapters</p>\n                    <a class="biblePlanBtn" href="/biblePlans?id=${t}">Open</a>\n                </div>`),
				document.querySelector('#bpHolder').appendChild(d);
		})(e);
	}
	async function U() {
		m('bibleplans'),
			console.log('bible plans'),
			document.querySelector('#openBiblePlansCreateBtn').addEventListener('click', A),
			document.querySelector('#bpPopupContents').addEventListener('click', (e) => {
				e.stopPropagation();
			}),
			document.querySelector('#bpPopupOverlay').addEventListener('click', N),
			document.querySelector('#closePostMainBtn').addEventListener('click', N),
			document.querySelector('#createBiblePlanBtn').addEventListener('click', R),
			(async function () {
				fetch('https://bolls.life/get-books/ESV/', { method: 'get', headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })
					.then((e) => e.json())
					.then((e) => {
						console.log(e),
							(function (e) {
								let t = document.createElement('div');
								(t.id = 'books'),
									(t.style = 'height: 100%;'),
									e.forEach((e) => {
										let n = document.createElement('div');
										(n.style = 'margin-block: 0px'),
											(n.id = e.name),
											(n.innerHTML = `\n\t\t<div id="book" style="display: flex;flex-direction: row; height: 50%">\n\t\t<input type="checkbox" id="bookCheckmark" value="${e.bookid}">\n\t\t<label for="bookCheckmark" ><h5 id="bookName">${e.bookid}. ${e.name}</h5>\n\t\t<button class="filterBtn" id="selectAllToggle" style="display: none; height: 50px; width: 120px; !important">Deselect All</button></label>\n\t\t\n\t\t<div id="chapters" value="${e.chapters}" style="display: none;">\n\t\t\t<div id="chaptersHolder" style="display: flex; flex-wrap: wrap; flex-direction: row; !important"></div>\n\t\t</div> \n\t\t</div>`);
										for (let t = 1; t <= e.chapters; t++) {
											let e = document.createElement('div');
											(e.innerHTML = `<button class="btnChapter" id="chapter" style="width: 10px; border-radius: 5px; background-color: #3dd598; color:white; min-width: 40px; line-height: 10px; margin-inline: 5px; margin-block: 5px; ">${t}</button>`),
												e.querySelector('#chapter').addEventListener('click', M),
												n.querySelector('#book').querySelector('#chapters').querySelector('#chaptersHolder').appendChild(e);
										}
										n.querySelector('#selectAllToggle').addEventListener('click', H), t.appendChild(n);
									}),
									document.querySelector('#booksHolder').appendChild(t);
							})(e),
							document.querySelectorAll('#bookCheckmark').forEach((e) => {
								e.addEventListener('click', function (t) {
									let n = t.target.parentNode.parentNode;
									var o, l;
									(o = t.target.parentNode),
										(l = e.checked),
										(o.querySelector('#chapters').style.display = l ? 'flex' : 'none'),
										e.checked
											? (console.log('checked'), (n.style = 'background-color: #1111; border-radius: 10px;'), (n.querySelector('#selectAllToggle').style = 'display: flex'))
											: (console.log('unchecked'), (n.style = 'background-color: #fff; border-radius: 10px;'), (n.querySelector('#selectAllToggle').style = 'display: none'));
								});
							});
					});
			})();
		let e = document.querySelector('#bpHolder').childNodes;
		console.log(e.length);
		let t = e.length;
		if (t > 0) for (let n = t - 1; n >= 0; n--) e[n].remove();
		fetch('api/biblePlans/get-bible-plans', { method: 'get', headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })
			.then((e) => e.json())
			.then((e) => {
				console.log(e), e.status && e.biblePlans.forEach((e) => P(e));
			}),
			(document.querySelector('#bpHolder').style.display = 'flex');
	}
	function A() {
		document.getElementById('bpPopupOverlay').style.display = 'flex';
	}
	function N() {
		document.getElementById('bpPopupOverlay').style.display = 'none';
	}
	function H() {
		let e = event.target;
		console.log(e);
		let t = e.parentNode.parentNode.querySelector('#chapters').querySelector('#chaptersHolder');
		console.log(t),
			'Select All' == e.innerHTML
				? (t.childNodes.forEach((e) => {
						e.querySelector('#chapter').style.backgroundColor = '#3dd598';
				  }),
				  (e.innerHTML = 'Deselect All'))
				: (t.childNodes.forEach((e) => {
						e.querySelector('#chapter').style.backgroundColor = '#f75252';
				  }),
				  (e.innerHTML = 'Select All'));
	}
	function M() {
		let e = event.target;
		'rgb(247, 82, 82)' == e.style.backgroundColor ? (e.style.backgroundColor = '#3dd598') : (e.style.backgroundColor = '#f75252');
	}
	function R() {
		let e = new FormData(),
			t = (function () {
				let e = document.querySelector('#books'),
					t = [];
				return (
					e.childNodes.forEach((e) => {
						if ('' != e.style.backgroundColor && 'none' != e.querySelector('#chapters').style.display) {
							let n = e.querySelector('#bookName').innerHTML.split('. '),
								o = n[0],
								l = (n[1], []);
							e.querySelector('#chaptersHolder').childNodes.forEach((e) => {
								let t = e.querySelector('#chapter');
								'rgb(61, 213, 152)' == t.style.backgroundColor && l.push({ number: t.innerHTML, comments: [] });
							}),
								l.length > 0 && t.push({ book: o, chapters: l });
						}
					}),
					0 == t.length ? null : t
				);
			})(),
			n = document.querySelector('#bpIcon').files[0];
		console.log(n),
			e.append('title', document.querySelector('#bpTitle').value),
			e.append('description', document.querySelector('#bpDescription').value),
			e.append('file', n),
			e.append('books', JSON.stringify(t)),
			fetch('api/admin/create-bible-plan', { method: 'post', body: e })
				.then((e) => e.json())
				.then((e) => {
					console.log(e),
						e.status &&
							(N(),
							document.querySelector('#booksHolder').remove(),
							(document.querySelector('#bpTitle').value = ''),
							(document.querySelector('#bpDescription').value = ''),
							(document.querySelector('#bpIcon').value = ''),
							U());
				});
	}
	async function F() {
		B();
		let e = event.target.id;
		'currentReportsBtn' == e
			? ((document.querySelector('#currentReportsBtn').style.backgroundColor = '#f2f2f2'), (document.querySelector('#ignoredReportsBtn').style.backgroundColor = '#fff'))
			: 'ignoredReportsBtn' == e &&
			  ((document.querySelector('#ignoredReportsBtn').style.backgroundColor = '#f2f2f2'), (document.querySelector('#currentReportsBtn').style.backgroundColor = '#fff'));
		let t = new FormData();
		t.append('id', e),
			fetch('api/admin/get-reports', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(t) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e),
						(document.querySelector('#loadedReportsTitle').innerHTML = `Loaded ${e.reports.length} ${e.type} Reports`),
						e.reports.forEach((e) => {
							I(e);
						});
				});
	}
	function j() {
		let e = document.querySelector('#loadedReportsTitle'),
			t = e.innerHTML,
			n = t.split(' ')[1],
			o = parseInt(n);
		o--;
		let l = t.replace(n, o);
		e.innerHTML = l;
	}
	function _() {
		let e = event.target.closest('#report'),
			t = e.querySelector('div').id;
		e.remove(), j();
		let n = new FormData();
		n.append('reportID', t),
			fetch('api/admin/delete-report', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e);
				});
	}
	function z() {
		let e = event.target.closest('#post'),
			t = e.querySelector('div').id,
			n = new FormData();
		n.append('devotionID', t),
			fetch('api/admin/delete-devotion', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
				.then((e) => e.json())
				.then((t) => {
					console.log(t), t.status && e.remove();
				});
	}
	function O() {
		let e = event.target.closest('#report'),
			t = e.querySelector('div').id;
		e.remove(), j();
		let n = new FormData();
		n.append('reportID', t),
			fetch('api/admin/ignore-report', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e);
				});
	}
	function V() {
		document.getElementById('devotionPopupOverlay').style.display = 'flex';
	}
	function Y() {
		document.getElementById('devotionPopupOverlay').style.display = 'none';
	}
	function Z() {
		let e = document.querySelector('#releaseDate').value,
			t = document.querySelector('#devotionTitle').value,
			n = tinymce.get('message').getContent(),
			o = new FormData();
		o.append('releaseDate', e),
			o.append('title', t),
			o.append('message', n),
			fetch('api/admin/create-devotion', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(o) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e), e.status && (Y(), location.reload());
				});
	}
	function J(e) {
		let t;
		try {
			t = event.target.closest('#memberElement');
		} catch (n) {
			t = e;
		}
		let n = t.querySelectorAll('#editableInfo > p'),
			o = t.querySelectorAll('.updateUserInfoInput');
		n.forEach((e) => {
			e.style.display = 'block';
		}),
			o.forEach((e) => {
				e.style.display = 'none';
			}),
			(t.querySelector('#confirmEditBtn').style.display = 'none'),
			(t.querySelector('#cancelEditBtn').style.display = 'none'),
			(t.querySelector('#editBtn').style.display = 'inline');
	}
	function W() {
		let e = event.target.closest('#memberElement'),
			t = e.querySelectorAll('.updateUserInfoInput'),
			n = new FormData();
		t.forEach((e) => {
			'' != e.value && n.append(e.id, e.value);
		}),
			fetch('api/admin/update-user', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
				.then((e) => e.json())
				.then((t) => {
					if ((console.log(t), t.status)) {
						console.log('success!'), J(e), console.log([...n.entries()]);
						for (const t of n.entries()) {
							const [n, o] = t;
							G(e, n, o);
						}
					}
				});
	}
	function G(e, t, n) {
		e.querySelector('#' + t).value = n;
		let o = t.split('update')[1];
		(o = o.charAt(0).toLowerCase() + o.slice(1) + 'Admin'), (e.querySelector('#' + o).innerHTML = n);
	}
	document.addEventListener('DOMContentLoaded', () => {
		document.querySelector('#membersBtn').addEventListener('click', x),
			document.querySelector('#analyticsBtn').addEventListener('click', L),
			document.querySelector('#reportsBtn').addEventListener('click', T),
			document.querySelector('#devotionsBtn').addEventListener('click', D),
			document.querySelector('#biblePlanBtn').addEventListener('click', U),
			document.querySelector('#updateDauBtn').addEventListener('click', n),
			document.querySelector('#currentReportsBtn').addEventListener('click', F),
			document.querySelector('#ignoredReportsBtn').addEventListener('click', F);
	}),
		document.addEventListener('click', function (e) {
			if (e.target.closest('#dropInformation')) {
				var t = e.target.closest('#dropInformation'),
					n = t.closest('.tableRow');
				'fit-content' === n.style.height
					? ((n.style.height = '60px'), t.querySelector('i').classList.replace('fa-chevron-down', 'fa-chevron-right'))
					: ((n.style.height = 'fit-content'), t.querySelector('i').classList.replace('fa-chevron-right', 'fa-chevron-down'));
			}
		}),
		document.addEventListener('DOMContentLoaded', function () {
			const e = document.querySelectorAll('.deleteBtn');
			console.log(e),
				e.forEach(function (e) {
					e.addEventListener('click', function () {
						console.log('Delete button clicked');
						const e = document.getElementById('optionBackground'),
							t = document.getElementById('deleteButtons');
						e && t ? ((e.style.display = 'flex'), (t.style.display = 'flex')) : console.log('Elements not found');
					});
				});
		});
	let K = 'days';
	document.addEventListener('DOMContentLoaded', () => {
		const e = document.querySelector('#typeSelector'),
			t = document.querySelectorAll('#timeBtn');
		document.querySelector('#typeSelectorHolder').addEventListener('click', () => {
			(e.style.display = 'flex'),
				t.forEach((t) => {
					t.addEventListener('click', () => {
						event.stopPropagation(), (e.style.display = 'none'), (document.querySelector('#timeText').innerHTML = `${t.value} <i class="fa-solid fa-chevron-down"></i>`), (K = t.value);
					});
				});
		});
	});
})();
