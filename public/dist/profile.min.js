(() => {
	const e = (e) => e.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;'),
		t = (e) => `${new Intl.DateTimeFormat('en-US', { month: 'long' }).format(e)} ${e.getDate()}, ${e.getFullYear()}`,
		o = () => {
			let e = (function () {
				let e = window.location.search.split('?')[2];
				return console.log(e), e ? e.split('=')[1] : null;
			})();
			n(), r(e), i(e);
		};
	const n = () => {
		document.querySelectorAll('.profileBox').forEach((e) => {
			e.style.display = 'none';
		});
	};
	const r = (e) => {
			n();
			let t = document.querySelector(`#${e}`);
			if (t) {
				(t.style.display = 'flex'), l(e);
				document.querySelectorAll('#profileSwitchViewBtn').forEach((t) => {
					t.getAttribute('data-target').toLowerCase() == e.toLowerCase() ? t.classList.add('highlighted-border') : t.classList.remove('highlighted-border');
				});
			} else document.querySelector('#posts').style.display = 'flex';
		},
		i = (o) => {
			switch (
				(r(o),
				(function (e) {
					let t = document.querySelector(`#${e}`);
					t && t.childNodes.forEach((e) => e.remove());
				})(o),
				o)
			) {
				case 'posts':
					!(function () {
						const o = new URLSearchParams(window.location.search);
						let n = new FormData();
						n.append('uid', o.get('uid').split('?')[0]),
							fetch('api/profile/return-posts', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
								.then((e) => e.json())
								.then((o) => {
									console.log(o),
										o.status &&
											o.posts.forEach((n) =>
												(function (o, n) {
													const { _id: r, title: i, message: l, username: p, postDate: m, uID: f, likes: h, likesCount: y, comments: g, commentsCount: w, images: v } = o;
													let L = document.createElement('div'),
														S = new Date(m);
													(L.innerHTML = `<div id="post">\n\t\t<span class="line"></span>\n\t\t<div class="forumPost" href="/forum?id=${r}" id=${r}>\n\t\t<div class="inlineForumUser">\n\t\t\t<img class="forumPfp" src="../images/default-pfp.jpeg"></img>\n\t\t\t<a class="forumUser" href="/profile?uid=${f}">${e(
														p
													)}</a>\n\t\t\t<p id="forumDate" class="forumUser"><i class="fa-solid fa-circle"></i> ${t(
														S
													)}</p>\n\t\t</div>\n\t\t<div class="forumTitle">\n\t\t\t<h3><a id="title" href="/forum?id=${r}">${e(
														i
													)}</a></h3>\n\t\t</div>\n\t\t\n\t\t\n\t\t<p style="white-space:pre;pointer-events:none;">${l}</p>\n\t\t<div id="images" style="display: flex; flex-direction: row; justify-content: flex-start;pointer-events:none;"></div>\n\t\t<div class="forumBtns">\n\t\t\t<p id="likeCounter">${y}</p>\n\t\t\t<button id="likeBtn" class="iconBtn"><i class="fa-regular fa-heart"></i></button>\n\t\t\t<p id="commentCounter">${w}</p>\n\t\t\t<button id="commentIcon" class="iconBtn"><i class="fa-regular fa-comment"></i></button>\n\t\t\t<button id="reportBtn" class="iconBtn"><i class="fa-regular fa-flag"></i></button>\n\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t`),
														s(f, L),
														h.includes(n) && (L.querySelector('#likeBtn').querySelector('i').outerHTML = '<i class="fa-solid fa-heart"></i>');
													if (n == f) {
														let e = document.createElement('button');
														(e.id = 'deleteBtn'),
															(e.className = 'iconBtn'),
															(e.innerHTML = '<i class="fa-regular fa-trash-can"></i>'),
															e.addEventListener('click', a),
															L.querySelector('.forumBtns').appendChild(e);
													}
													v.length > 0 &&
														v.forEach((e) => {
															L.querySelector('#images').appendChild(returnIconDiv(e, 100));
														});
													L.querySelector('#commentIcon').addEventListener('click', d),
														L.querySelector('#likeBtn').addEventListener('click', c),
														L.querySelector('#reportBtn').addEventListener('click', u),
														document.querySelector('#posts').appendChild(L);
												})(n, o.currentUserID)
											);
								})
								.catch((e) => {
									console.log(e);
								});
					})();
					break;
				case 'comments':
					console.log('load comments'),
						(function () {
							const o = new URLSearchParams(window.location.search);
							let n = new FormData();
							n.append('uid', o.get('uid').split('?')[0]),
								fetch('api/profile/return-comments', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(n) })
									.then((e) => e.json())
									.then((o) => {
										console.log(o),
											o.status &&
												o.comments.forEach((n) =>
													(function (o, n) {
														const { _id: r, author: i, authorID: l, content: a, postDate: c, comments: d, likes: u, likesCount: p, commentsCount: m } = o;
														console.log('Replies:', d);
														let g = new Date(c),
															v = document.createElement('div');
														(v.innerHTML = `\n\t\t\t<div>\n\t\t\t<span class="line"></span>\n\t\t\t<div style="padding: 10px; border-radius: 10px;" class="comment" id=${r}>\n\t\t\t\t<div class="inlineForumUser">\n\t\t\t\t<img id="postPfp" class="forumPfp" src="${pfp}"></img>\n\t\t\t\t<a class="forumUser" href="/profile?uid=${l}">${e(
															i
														)}</a>\n\t\t\t\t<p id="forumDate" class="forumUser"><i class="fa-solid fa-circle"></i> ${t(
															g
														)}</p>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<p style="font-family: 'roboto'; font-size: 19px; color: #333;">${e(
															a
														)}</p>\n\t\t\t\t<div class="forumBtns">\n\t\t\t\t\t<p style="color: #333;" id="likeCounter">${p}</p>\n\t\t\t\t\t<button id="likeBtn" class="iconBtn"><i class="fa-regular fa-heart"></i></button>\n\t\t\t\t\t<button id="reportBtn" class="iconBtn"><i class="fa-regular fa-flag"></i></button>\n\t\t\t\t\t<button id="replyBtn" class="iconBtn">Reply</button>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`),
															s(l, v),
															v.querySelector('#likeBtn').addEventListener('click', f),
															v.querySelector('#replyBtn').addEventListener('click', w),
															v.querySelector('#reportBtn').addEventListener('click', h),
															u.includes(n) && (v.querySelector('#likeBtn').querySelector('i').outerHTML = '<i class="fa-solid fa-heart"></i>');
														if (n == l) {
															let e = document.createElement('button');
															(e.id = 'deleteBtn'),
																(e.className = 'iconBtn'),
																(e.innerHTML = '<i class="fa-regular fa-trash-can"></i>'),
																e.addEventListener('click', y),
																v.querySelector('.forumBtns').appendChild(e);
														}
														if ((document.querySelector('#comments').appendChild(v), window.location.hash)) {
															'commentSection' == window.location.hash.substring(1) && goToCommentSection();
														}
														if (d.length > 0) {
															let e = document.createElement('div'),
																t = `Load ${m} replies`;
															1 === d.length && (t = `Load ${m} reply`),
																(e.innerHTML = `<button style="text-indent: 0px; padding: 10px;"class="faqBtn" id="openReplyBtn">${t}</button>`),
																e.querySelector('#openReplyBtn').addEventListener('click', openReplies),
																v.querySelector('.comment').appendChild(e);
														}
													})(n, o.currentUserID)
												);
									})
									.catch((e) => {
										console.log(e);
									});
						})();
					break;
				case 'annotations':
				case 'favorites':
				case 'followers':
					break;
				default:
					i('posts');
			}
		},
		l = (e) => {
			let t = new URLSearchParams(window.location.search).get('uid').split('?')[0],
				o = `${window.location.origin}${window.location.pathname}?uid=${t}?v=${e}`;
			history.pushState(null, '', o);
		};
	function a() {
		let e = event.target.closest('.forumPost').id;
		const t = new FormData();
		t.append('postID', e),
			fetch('api/forum/delete-post', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(t) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e), e.status ? (console.log('success'), location.reload()) : (e.message, console.log('error!'));
				})
				.catch((e) => {
					console.log(e);
				});
	}
	function s(e, t) {
		let o = new FormData();
		o.append('userID', e),
			fetch('api/profile/getPfp', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(o) })
				.then((e) => e.json())
				.then(async (e) => {
					e.status ? (t.querySelector('.forumPfp').src = '/image/' + e.pfp) : (t.querySelector('.forumPfp').src = '../images/default-pfp.jpeg');
				});
	}
	function c() {
		let e = event.target;
		'I' != e.nodeName && (e = e.querySelector('i'));
		const t = e.closest('#post'),
			o = t.querySelector('#likeBtn'),
			n = (t.querySelector('#title'), e.closest('.forumPost').id),
			r = t.querySelector('#likeCounter'),
			i = new FormData();
		i.append('postID', n);
		try {
			'<i class="fa-regular fa-heart"></i>' == e.outerHTML
				? ((e.outerHTML = '<i class="fa-solid fa-heart"></i>'), r.innerHTML++)
				: ((e.outerHTML = '<i class="fa-regular fa-heart"></i>'), r.innerHTML--),
				(o.enabled = !1);
		} catch (e) {
			console.log(e);
		}
		fetch('api/forum/likePost', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(i) })
			.then((e) => e.json())
			.then((t) => {
				console.log(t),
					'like' == t.type ? (e.outerHTML = '<i class="fa-solid fa-heart"></i>') : 'unlike' == t.type && (e.outerHTML = '<i class="fa-regular fa-heart"></i>'),
					(r.innerHTML = t.likes),
					(o.enabled = !0);
			})
			.catch((e) => {
				console.log(e), (o.enabled = !0);
			});
	}
	function d() {
		let t = event.target.closest('.forumPost').id;
		location.href = `forum?id=${e(t)}#commentSection`;
	}
	function u() {
		const e = event.target.closest('.forumPost'),
			t = e.id,
			o = e.querySelector('.forumUser').innerHTML;
		(document.querySelector('#reportTitle').innerHTML = `Report <a href="/forum?id=${t}">${o}'s Post</a>`),
			(document.querySelector('#makeReport').style.display = 'flex'),
			(document.querySelector('#reportInformation').style.display = 'flex');
	}
	function p() {
		let e = event.target.getAttribute('data-target').toLowerCase();
		i(e);
	}
	function m() {
		let e = event.target,
			t = e.closest('div').querySelector('#replyInput').value,
			o = e.closest('.comment').id,
			n = document.querySelector('.forumPost').id;
		const r = new FormData();
		r.append('content', t),
			r.append('commentID', o),
			r.append('postID', n),
			fetch('api/forum/reply', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(r) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e), location.reload();
				})
				.catch((e) => {
					console.log(e);
				});
	}
	function f() {
		let e = event.target;
		'I' != e.nodeName && (e = e.querySelector('i'));
		const t = e.closest('.comment'),
			o = t.querySelector('#likeBtn'),
			n = e.closest('.comment').id,
			r = t.querySelector('#likeCounter'),
			i = new FormData();
		i.append('commentID', n);
		try {
			'<i class="fa-regular fa-heart"></i>' == e.outerHTML
				? ((e.outerHTML = '<i class="fa-solid fa-heart"></i>'), r.innerHTML++)
				: ((e.outerHTML = '<i class="fa-regular fa-heart"></i>'), r.innerHTML--),
				(o.enabled = !1);
		} catch (e) {
			console.log(e);
		}
		fetch('api/forum/likeComment', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(i) })
			.then((e) => e.json())
			.then((t) => {
				console.log(t),
					'like' == t.type ? (e.outerHTML = '<i class="fa-solid fa-heart"></i>') : 'unlike' == t.type && (e.outerHTML = '<i class="fa-regular fa-heart"></i>'),
					(r.innerHTML = t.likes),
					(o.enabled = !0);
			})
			.catch((e) => {
				console.log(e), (o.enabled = !0);
			});
	}
	function h() {
		const e = event.target.closest('.comment').id,
			t = post.querySelector('.forumUser').innerHTML;
		(document.querySelector('#reportTitle').innerHTML = `Report <a href="/forum?id=${e}">${t}'s Comment</a>`),
			(document.querySelector('#reportTitle').name = e),
			(document.querySelector('#makeReport').style.display = 'flex'),
			(document.querySelector('#reportInformation').style.display = 'flex');
	}
	function y() {
		let e = event.target.closest('.comment').id;
		const t = new FormData();
		t.append('commentID', e),
			fetch('api/forum/delete-comment', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(t) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e), e.status ? (console.log('success'), window.location.reload()) : (e.message, console.log('error!'));
				})
				.catch((e) => {
					console.log(e);
				});
	}
	function g() {
		console.log('close');
		let e = event.target;
		e
			.closest('.comment')
			.querySelectorAll('#replyDiv')
			.forEach((e) => e.remove()),
			(e.innerHTML = 'Reply'),
			e.removeEventListener('click', g),
			e.addEventListener('click', w);
	}
	function w() {
		let e = event.target;
		e.innerHTML = 'Close';
		let t = e.closest('.comment');
		t.querySelectorAll('#replyDiv').forEach((e) => e.remove());
		t.id;
		let o = document.createElement('div');
		(o.id = 'replyDiv'),
			(o.innerHTML =
				'<input id="replyInput" placeholder="Add your reply..."class="postText" type="text"><button style="margin-left: auto;margin-right:5%;text-indent: 0px; padding: 10px;" class="faqBtn" id="replySubmitBtn">Reply</button>'),
			o.querySelector('#replySubmitBtn').addEventListener('click', m),
			t.querySelector('.forumBtns').insertAdjacentElement('afterend', o),
			e.removeEventListener('click', w),
			e.addEventListener('click', g);
	}
	!(function () {
		const e = (function () {
			let e = window.location.search.split('?')[1];
			return e ? e.split('&')[0].split('=')[1] : null;
		})();
		console.log(e);
		const t = new FormData();
		t.append('uid', e),
			fetch('api/profile/load', { method: 'post', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: new URLSearchParams(t) })
				.then((e) => e.json())
				.then((e) => {
					console.log(e),
						e.status &&
							(function (e) {
								console.log(e), (document.title = `${e.username} | Long X Ranch Cowboys`);
								let t = document.createElement('div'),
									n = '../images/default-pfp.jpeg';
								e.pfp && (n = e.pfp);
								let r = '';
								e.bio && (r = e.bio);
								(t.innerHTML = `<div class="profile" id="profile">\n\t\t<div class="profileInformation"> \n\t\t\t<div style="display: flex; flex-direction: column; color: #333; margin-bottom: 20px; width: 40%;">\n\t\t\t\t<img style="order: 1; width: 10vw; height: 10vw; border-radius: 50%; object-fit: cover; object-position: center; margin-inline: auto;" id="pfp" src="/image/${n}">\n\t\t\t\t<h1 class="profileUsername" style="order: 2; line-height: 15px; margin-left: 10px; font-size: 2.4vw; text-align: center;">${e.username}</h1>\n\t\t\t\t<h1 class="profileLocation" style="order: 3; line-height: 15px; margin-left: 10px; font-size: 1.7vw; text-align: center;">${e.city}, ${e.state}</h1>\n\t\t\t</div>\n\t\t\t<div style="width: 40%;">\n\t\t\t\t<h1 class="biographyHeader" style="margin-top: 0px; color: #333;">Biography</h1>\n\t\t\t\t<p class="profileBiography">${r}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="buttonRack">\n\t\t\t<button data-target="posts" class="highlighted-border" id="profileSwitchViewBtn">Posts</button>\n\t\t\t<button data-target="comments" id="profileSwitchViewBtn">Comments</button>\n\t\t</div>\n\t\t<div style="width: 80%; margin-inline: auto;" id="posts" class="profileBox"></div>\n\t\t<div style="width: 80%; margin-inline: auto;" id="comments" class="profileBox"></div>\n\t\t<div style="width: 80%; margin-inline: auto;" id="annotations" class="profileBox"></div>\n\t\t<div style="width: 80%; margin-inline: auto;" id="favorites" class="profileBox"></div>\n\t\t<div style="width: 80%; margin-inline: auto;" id="followers" class="profileBox"></div>\n\t\t</div>\n\t\t`),
									t.querySelectorAll('#profileSwitchViewBtn').forEach((e) => {
										e.addEventListener('click', p);
									}),
									document.body.appendChild(t),
									o();
							})(e.profile);
				});
	})(),
		document.addEventListener('DOMContentLoaded', () => {
			document.addEventListener('click', (e) => {
				e.target.matches('.forumPost') && (location.href = `forum?id=${e.target.id}`);
			});
		});
})();
